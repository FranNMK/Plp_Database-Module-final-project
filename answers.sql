-- CREATE DATABASE
CREATE DATABASE IF NOT EXISTS STUDENT_RECORDS;
USE STUDENT_RECORDS;

-- TABLE: DEPARTMENTS
CREATE TABLE DEPARTMENTS (
  DeptId INT AUTO_INCREMENT PRIMARY KEY,
  DeptName VARCHAR(100) NOT NULL UNIQUE
);

-- TABLE: LECTURERS
CREATE TABLE LECTURERS (
  LecturerId INT AUTO_INCREMENT PRIMARY KEY,
  FirstName VARCHAR(100) NOT NULL,
  LastName VARCHAR(100) NOT NULL,
  Email VARCHAR(150) NOT NULL UNIQUE,
  DeptId INT,
  FOREIGN KEY (DeptId) REFERENCES DEPARTMENTS(DeptId) ON DELETE SET NULL
);

-- TABLE: COURSES
CREATE TABLE COURSES (
  CourseId INT AUTO_INCREMENT PRIMARY KEY,
  CourseCode VARCHAR(20) NOT NULL UNIQUE,
  CourseTitle VARCHAR(150) NOT NULL,
  Credits INT NOT NULL DEFAULT 3,
  DeptId INT,
  LecturerId INT,
  ClassroomId INT,
  FOREIGN KEY (DeptId) REFERENCES DEPARTMENTS(DeptId) ON DELETE CASCADE,
  FOREIGN KEY (LecturerId) REFERENCES LECTURERS(LecturerId) ON DELETE SET NULL,
  FOREIGN KEY (ClassroomId) REFERENCES CLASSROOMS(ClassroomId) ON DELETE SET NULL
);

-- TABLE: STUDENTS
CREATE TABLE STUDENTS (
  StudentId INT AUTO_INCREMENT PRIMARY KEY,
  FirstName VARCHAR(100) NOT NULL,
  LastName VARCHAR(100) NOT NULL,
  Email VARCHAR(150) NOT NULL UNIQUE,
  DateOfBirth DATE NOT NULL,
  DeptId INT,
  FOREIGN KEY (DeptId) REFERENCES DEPARTMENTS(DeptId) ON DELETE SET NULL
);

-- TABLE: ENROLLMENTS (Many-to-Many Student â†” Course)
CREATE TABLE ENROLLMENTS (
  EnrollmentId INT AUTO_INCREMENT PRIMARY KEY,
  StudentId INT NOT NULL,
  CourseId INT NOT NULL,
  EnrolledOn DATE DEFAULT (CURRENT_DATE),
  Grade VARCHAR(2),
  FOREIGN KEY (StudentId) REFERENCES STUDENTS(StudentId) ON DELETE CASCADE,
  FOREIGN KEY (CourseId) REFERENCES COURSES(CourseId) ON DELETE CASCADE,
  UNIQUE (StudentId, CourseId)
);

-- TABLE: CLASSROOMS
CREATE TABLE CLASSROOMS (
  ClassroomId INT AUTO_INCREMENT PRIMARY KEY,
  RoomNumber VARCHAR(50) NOT NULL UNIQUE,
  Capacity INT NOT NULL
);

-- TABLE: ATTENDANCE
CREATE TABLE ATTENDANCE (
  AttendanceId INT AUTO_INCREMENT PRIMARY KEY,
  StudentId INT NOT NULL,
  CourseId INT NOT NULL,
  Date DATE NOT NULL,
  Status ENUM('Present','Absent','Late') NOT NULL,
  FOREIGN KEY (StudentId) REFERENCES STUDENTS(StudentId) ON DELETE CASCADE,
  FOREIGN KEY (CourseId) REFERENCES COURSES(CourseId) ON DELETE CASCADE
);

-- TABLE: EXAMS
CREATE TABLE EXAMS (
  ExamId INT AUTO_INCREMENT PRIMARY KEY,
  CourseId INT NOT NULL,
  StudentId INT NOT NULL,
  ExamDate DATE NOT NULL,
  Score DECIMAL(5,2),
  FOREIGN KEY (CourseId) REFERENCES COURSES(CourseId) ON DELETE CASCADE,
  FOREIGN KEY (StudentId) REFERENCES STUDENTS(StudentId) ON DELETE CASCADE
);
